[tool:pytest]
# Configuração do Pytest para AUM Scraper
# Implementa requisitos de cobertura mínima de 80%

# Diretórios de teste
testpaths = tests

# Padrões de arquivos de teste
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Configurações de cobertura
addopts = 
    --strict-markers
    --strict-config
    --cov=app
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
    --cov-branch
    --cov-append

# Marcadores personalizados
markers =
    unit: Testes unitários
    integration: Testes de integração
    api: Testes de endpoints da API
    models: Testes de modelos de dados
    slow: Testes que demoram mais tempo

# Configurações de cobertura
[coverage:run]
source = app
omit = 
    */tests/*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Configurações específicas do projeto
[tool:pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
